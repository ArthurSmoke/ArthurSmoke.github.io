[{"categories":["笔记","生活"],"content":"在考驾照这件事情上，我真的是拖延症晚期发作。 从报名到开始考，前前后后过了 4 年时间。 为了中间能回忆起之前练得内容，就把每个考试想进行了记录。 这篇文章也是因为有朋友询问，索性发到博客里，也算解救写博客的懒癌晚期，一举多得。 ","date":"2021-03-23","objectID":"/posts/driver-note/:0:0","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"科目一 假一吊二撤三醉五逃终身 站 30 口 50 禁止停车 高速最低 60 最高 120 两车道，左 100-120，右 60-100 三车道，左 110-120，中 90-110，右 60-80 未逃逸：3 年以下；逃逸或情节特别恶劣：3-7 年；因逃逸致人死亡：7 年以上。 只要机动车上路行驶，就必须悬挂号牌，放置检验合格标志、保险标志，随车携带行驶证及驾驶证。缺少任何一项，交警都可依法扣留车辆。 有 90 日选 90 日，没 90 日选 30 日 题干中有驾驶证，选项中找驾驶证，选项中没有驾驶证找车 车牌，驾照，酒驾，逃逸，超速 12 分 应急车道，信号灯 6 分 ","date":"2021-03-23","objectID":"/posts/driver-note/:1:0","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"科目二 ","date":"2021-03-23","objectID":"/posts/driver-note/:2:0","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"倒车入库 离合踩到底，挂挡，放手刹，压离合 前车盖压黄线，向右打满，车头调正后回方向盘 挂倒挡，压离合 左后视镜下沿和黄线 1 指时，向右打满 车身距左右平均后，方向盘回正 调整方向，入库 ","date":"2021-03-23","objectID":"/posts/driver-note/:2:1","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"熄火，启动 先离合踩到底，挂空挡，启动 ","date":"2021-03-23","objectID":"/posts/driver-note/:2:2","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"侧边停车 进 右后视镜红色角消失时向右打死 左后视镜出现红色标志回正 左后视镜后轮压线，向左打死，平行后停车 出 方向盘左打死不动，1 档，车前盖左边线压黄线回正 车盖中心(雨刮左侧)压黄线向右打一圈，头正后回正 ","date":"2021-03-23","objectID":"/posts/driver-note/:2:3","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"起步 起步打左转向灯， 车子移动，打右转向灯，12 点钟正对停字 松离合，上坡，视线和两个杆子一条线，离合踩死，刹车踩死，拉手刹 打左转向灯，松手刹，松离合，车子抖动慢慢松刹车 过了坡开始下坡的时候离合踩到底，用刹车控制速度，左大灯往左边黄线靠 打右转向灯，右侧门把手和黄线平时右转打死 ","date":"2021-03-23","objectID":"/posts/driver-note/:2:4","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"S 弯 车头要压住黄线向右打一圈 左灯要压到左边最突出部分时回正 左灯要压住右侧线时向向左打一圈，修正方向使右线沿着左灯方向 左灯压倒左线时回正 右侧后视镜下面压到右线，向右打满，然后回 1/4 出弯回正，头探出窗户看左轮，修正方向到贴着线，停在收费旁，打空挡，拉手刹 ","date":"2021-03-23","objectID":"/posts/driver-note/:2:5","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"科目三 ","date":"2021-03-23","objectID":"/posts/driver-note/:3:0","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"场内 上车动一下远关灯 转向灯，鸣笛，离合，一档，手刹 上路后关转向灯 直线行驶，调整好方向再进，别动 超车，转向灯 3 秒，看后视镜再转 隧道，给小油，速度别太难了 出隧道后，加 4 档，上 40 码，然后减到 30 码，降到 3 档 直角转弯后，给小油稳定在 3 档 听指示 3 降 2，加油，2 升 3 学校区域，送来油门，左右摇头 右转向灯，在柱子前停下，左右摇头 树和肩膀平齐向右打死，千万别压线 出门前停在线前面，听指示 ","date":"2021-03-23","objectID":"/posts/driver-note/:3:1","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"左 观察左右车流，走外圈 右转向灯，路口停下，换一档 人行道松开油门，左右观察 调头打转向灯，到调头的地方，稍微向右调一下方向，在横线前停下，看后视镜，起步时向左打死方向 ","date":"2021-03-23","objectID":"/posts/driver-note/:3:2","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"右 观察左右车流，走内圈 左转向灯，路口停下，换一档 调头打转向灯，到调头的地方，在横线前停下，看后视镜，车头压线向左打死 ","date":"2021-03-23","objectID":"/posts/driver-note/:3:3","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"回场内 提前松开离合器，加油上坡，换 2 档 公交车区域提前观察 靠边停车，别压线，人和地上白点对齐就停 ","date":"2021-03-23","objectID":"/posts/driver-note/:3:4","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","生活"],"content":"其他 尽量 3 档 能停就停 别忘了转向灯 别停在斑马线 ","date":"2021-03-23","objectID":"/posts/driver-note/:3:5","tags":null,"title":"驾考宝典","uri":"/posts/driver-note/"},{"categories":["笔记","测试"],"content":"最近在学习实践自动化相关的知识，最终选用 pytest 来组织测试用例。 本文是 pytest 学习笔记的第一篇。 Fixture 是 pytest 中的一个基本概念，可以简单理解为在测试用例前需要执行的内容，我用来初始化环境、准备数据等工作。 ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:0:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"Fixture 在被当做 fixture 的函数前面加上 @pytest.fixture来定义一个 Fixture @pytest.fixture() def before(): print('\\nbefore each test') ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:1:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"Scope function：每个 test 都运行，默认是 function 的 scope class：每个 class 的所有 test 只运行一次 module：每个 module 的所有 test 只运行一次 session：每个 session 只运行一次 @pytest.fixture(scope=\"module\") def smtp(): smtp = smtplib.SMTP(\"smtp.gmail.com\", 587, timeout=5) yield smtp #yield下面是teardown内容 smtp.close() def test_ehlo(smtp): #fixture的function名称，可以直接作为参数，传给需要使用它的测试样例。 在使用时，smtp并非前面定义的function，而是function的返回值，即smtplib.SMTP response, msg = smtp.ehlo() assert response == 250 assert b\"smtp.gmail.com\" in msg ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:1:1","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"conftest.py conftest.py是 pytest 的默认配置文件，可以在其中放公用的 fixture 或 plugin。 tests ├── conftest.py ├── test_a.py ├── test_b.py └── sub ├── __init__.py ├── conftest.py ├── test_c.py └── test_d.py conftest.py遵守就近原则，会优先使用层级最近的 conftest 中定义的 Fixture。同时外层的测试用例 a,b 不能使用内层conftest.py中定义的 fixture ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:1:2","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"Use Fixture ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:2:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"1. 当做参数直接调用 @pytest.fixture(scope=\"module\") def smtp(): smtp = smtplib.SMTP(\"smtp.gmail.com\", 587, timeout=5) yield smtp smtp.close() def test_ehlo(smtp): response, msg = smtp.ehlo() assert response == 250 assert b\"smtp.gmail.com\" in msg fixture 的 function 名称，可以直接作为参数，传给需要使用它的测试样例。 在使用时，smtp并非前面定义的 function，而是 function 的返回值，即smtplib.SMTP ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:2:1","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"2. 在函数前用 Fixture Decorator 调用 @pytest.mark.usefixtures(\"before\") def test_1(): print('test_1()') class Test1: @pytest.mark.usefixtures(\"before\") def test_3(self): print('test_1()') @pytest.mark.usefixtures(\"before\") def test_4(self): print('test_2()') @pytest.mark.usefixtures(\"before\") class Test2: def test_5(self): print('test_1()') def test_6(self): print('test_2()') ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:2:2","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"3. 用 Autouse 调用 Fixture fixture decorator 一个 optional 的参数是autouse, 默认设置为 False。 当默认为 False，就可以选择用上面两种方式来试用 fixture。 当设置为 True 时，在一个 session 内的所有的 test 都会自动调用这个 fixture。 @pytest.fixture(autouse=True) def before(): print('\\nbefore each test') ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:2:3","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"Finallizer @pytest.fixture() def smtp(request): smtp = smtplib.SMTP(\"smtp.gmail.com\") def fin(): #释放函数 print (\"teardown smtp\") smtp.close() request.addfinalizer(fin) #测试完成后调用 return smtp 通过addfinallizer()注册释放函数 ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:3:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"Parametrizing fixture 可以通过参数化来循环使用预设的参数 ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:4:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"1. params @pytest.fixture(params=[\"smtp.gmail.com\", \"mail.python.org\"]) def smtp(request): smtp = smtplib.SMTP(request.param, 587, timeout=5) yield smtp print (\"finalizing %s\" % smtp) smtp.close() 在 @pytest.fixture中，指定参数params，就可以利用特殊对象（request）来引用request.param。 使用以上带参数的 smtp 的测试样例，都会被执行两次。 ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:4:1","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"2. @pytest.mark.parametrize def add(a, b): return a + b @pytest.mark.parametrize(\"test_input, expected\", [ ([1, 1], 2), ([2, 2], 4), ([0, 1], 1), ]) def test_add(test_input, expected): assert expected == add(test_input[0], test_input[1]) ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:4:2","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"Build-in Fixture pytest --fixtures可以列出所有可用的 fixture，包括内置的、插件中的、以及当前项目定义的。 ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:5:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"capsys capsys可以捕捉测试 function 的标准输出 def test_print(capsys): print('hello') out, err = capsys.readouterr() assert 'hello' == out ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:5:1","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"tmpdir tmpdir则可以自动创建临时文件夹 def test_path(tmpdir): from py._path.local import LocalPath assert isinstance(tmpdir, LocalPath) from os.path import isdir assert isdir(str(tmpdir)) ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:5:2","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":["笔记","测试"],"content":"参考 《Pytest 中的 Fixture》 《Pytest Fixture》 《pytest fixtures: explicit, modular, scalable》 ","date":"2019-03-16","objectID":"/posts/pytest-fixture-note/:6:0","tags":null,"title":"Pytest Fixture Note","uri":"/posts/pytest-fixture-note/"},{"categories":null,"content":"马甲 Arthur Feng , 洋葱爱生活 ","date":"0001-01-01","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"爱好 宅，动漫，电影，游戏，美食，书 ","date":"0001-01-01","objectID":"/about/:2:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"工作 2010-2015：武汉惠普企业服务交付有限公司：专职测试 2015-2018：杭州九言科技股份有限公司：业务测试负责人 2018-2019：杭州兑吧网络科技有限公司：天天趣闻测试负责人 2019-Now： 杭州印鸽科技有限公司：测试 ","date":"0001-01-01","objectID":"/about/:3:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"我自己眼中的我 80 后，奔三的 吃货一枚！ 每个故事中都有一个胖子，我就是那个胖子！ 强迫症患者，人人、 微博、GR 未读数大于 10 我会死！ 少壮不努力，长大做挨踢！ 学习 Python 中，宅男要拯救世界！ 隐藏在眼镜后的小眼睛时常闪烁着智慧的光芒！ 爱读书，自诩为 2B 的文艺青年！ 部落血精灵牧师，For The Horde！ Cler，冰天雪地全身赤裸一丝不挂五体投地跪求种子！ 艾未未债主，没被请去喝过茶！ 单身，求御姐、萝莉、傲娇、女王拯救！ ","date":"0001-01-01","objectID":"/about/:4:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Wishlist ","date":"0001-01-01","objectID":"/about/:5:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"2021 考驾照 脱单 PS5 ","date":"0001-01-01","objectID":"/about/:5:1","tags":null,"title":"About","uri":"/about/"}]